name: CI/CD Pipeline
run-name: Pipeline CI/CD executed by ${{ github.actor }} in ${{ github.run_number }}

on:
  workflow_call:

jobs:
  # Unit Test
  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup project
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install dependencies
        run: npm run test

      - name: Run tests with coverage
        run: npm run test:cov

  # SonarCloud Scan
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: [unit_test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run unit tests with coverage
        run: npm run test:cov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        # TODO - Remove this after the quality gate is fixed
        continue-on-error: true
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt

      - name: Status Quality Gate
        if: ${{ always() }}
        run: |
          echo "Status Quality Gate: ${{ steps.sonarcloud-quality-gate-check.outputs.quality-gate-status }}"
          echo "Quality Gate Details:"
          cat .scannerwork/report-task.txt
